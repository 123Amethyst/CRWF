@{
    ViewData["Title"] = "登录";
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<CRDT.WF.Controllers.HomeController> Htmllocalizer

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no" />
    <title>@Htmllocalizer["LoginSystem"]</title>
    <link rel="shortcut icon" href="/ico/login.ico">
    <link rel="stylesheet" href="/css/Login/login.css">
    <link rel="stylesheet" href="/css/message.css">

    <link rel="stylesheet" href="/css/SelectInspiration/cs-select.css">
    <link rel="stylesheet" href="/css/SelectInspiration/cs-skin-elastic.css">

    <link rel="stylesheet" href="/css/Remodal-master/remodal.css">
    <link rel="stylesheet" href="/css/Remodal-master/remodal-default-theme.css">
</head>

<body>
    <div class="body">
        <img src="/img/Login/logo.png"  alt="" class="logo" />
        <div class="content">
            <div class="card">
                <div class="title">
                    <img src="/img/Login/bottle.png" alt="" />
                    <p>Login</p>
                </div>

                <div class="form">
                    <div class="form_input">
                        <img src="/img/Login/user.png" alt="" />
                        <input id="userName" name="userName" placeholder="@Htmllocalizer["Validity_Username"]" type="text" value="" onkeypress="clickButton();" />
                        <div class="input_msg">
                            <i></i>
                            <p>@Htmllocalizer["Validity_Username"]!</p>
                        </div>
                    </div>
                    <div class="form_input">
                        <img src="/img/Login/password.png" alt="" />
                        <input id="password" name="password" placeholder="@Htmllocalizer["Validity_Password"]" type="password" value="" onkeypress="clickButton();" />
                        <div class="input_msg">
                            <i></i>
                            <p>@Htmllocalizer["Validity_Password"]!</p>
                        </div>
                    </div>
                    <div class="form_tool">
                        <a href="#modal">@Htmllocalizer["Forget_Password"]?</a>
                        <div class="style-select">
                            <section>
                                <select class="cs-select cs-skin-elastic" id="languages">
                                    <option value="zh-HK">繁體中文</option>
                                    <option value="zh-CN">简体中文</option>
                                    <option value="en-US">English</option>
                                </select>
                            </section>
                        </div>
                    </div>
                    <!--登录按钮-->
                    <button id="submit_login" type="button" class="login_button" onclick="_onsubmit();" onkeypress="clickButton();">@Htmllocalizer["Login"]</button>
                </div>
            </div>
        </div>
        <div class="foot">
            <p>Support Hotline 12580</p>
            <p style="color: antiquewhite;" id="eVersion">@@T</p>
        </div>
    </div>

    <div class="remodal" data-remodal-id="modal" role="dialog" aria-labelledby="modalTitle" aria-describedby="modalDesc">
        <div class="remodal-head">
            <h3 id="modalTitle" class="remodal-title">@Htmllocalizer["Change_Password"]</h3>
            <button data-remodal-action="close" class="remodal-close" aria-label="Close"></button>
        </div>
        <div>
            <div id="modalDesc" style="text-align: left;">
                <div class="form" style="margin-top: 0;">
                    <p>@Htmllocalizer["LoginAccount"]</p>
                    <div class="form_input" style=" margin-top: 8px; margin-bottom: 20px;">
                        <img src="/img/Login/user.png" alt="" />
                        <input id="ForgetUser" name="ForgetUser" placeholder="@Htmllocalizer["LoginAccount"]" type="text" value="" readonly />
                    </div>
                    <p>@Htmllocalizer["LoginEmail"]</p>
                    <div class="form_input" style=" margin-top: 8px;">
                        <img src="/img/Login/email.png" alt="" />
                        <input id="ForgetEmail" name="ForgetEmail" placeholder="@Htmllocalizer["LoginEmail"]" type="text" value="" readonly />
                    </div>
                    <input id="UserId" type="text" hidden readonly />
                    <p style="color: red; font-size: small;">@Htmllocalizer["Change_Password_Tip"]</p>
                    <!--发送按钮-->
                    <button data-remodal-action="confirm" type="button" class="login_button">@Htmllocalizer["Send_Email"]</button>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/jquery-3.5.1.min.js"></script>
    <script src="/js/message.min.js"></script>
    <script src="/js/SelectInspiration/classie.js"></script>
    <script src="/js/SelectInspiration/selectFx.js"></script>
    <script src="/js/Remodal-master/remodal.js"></script>
    <script>
        var t = [];

        (function () {
            var _v = 'zh-CN', _l
            if (getCookie('.AspNetCore.Culture').length==0) {
                addCookie('.AspNetCore.Culture', 'c=zh-CN|uic=zh-CN', 99999,'/')
            }
            _l = getCookie('.AspNetCore.Culture').split('|')
            if (_l.length) {
                _v=_l[0].slice(2)
            }
            $('#languages').find('option[value="' + _v + '"]')[0].setAttribute("selected", "selected");
            [].slice.call(document.querySelectorAll('select.cs-select')).forEach(function (el) {
                new SelectFx(el, {
                    onChange: function (val) {
                        addCookie('.AspNetCore.Culture', 'c=' + val + '|uic=' + val, 99999,'/')
                        location.reload();
                    }
                });
            });

            let e = localStorage.getItem("Environment")
            if (e != null)
                $('#eVersion').text("@@" + e[0])

            $('[data-remodal-id=modal]').remodal().settings.closeOnConfirm = false
        })();

       _onsubmit = function () {
            $('#userName').parent().removeClass('error')
            $('#password').parent().removeClass('error')
            if ($('#userName').val() == "" ) {
                $('#userName').parent().addClass('error')
            }
            if ($('#password').val() == "" ) {
                $('#password').parent().addClass('error')
            }
            if ($('#userName').val() != "" && $('#password').val() != "") {
                let _data = {
                    userName: $('#userName').val(),
                    password: $('#password').val()
                }
                let _token = getToken()
                if (_token != null) {
                    _data['token'] = _token
                    $.ajax({
                        method: 'POST',
                        url: '@Url.Action("Login","Home")',
                        data: _data,
                        success: function (res) {
                            if (res.Code == 200) {
                                Qmsg.success({
                                    content: res.Message,
                                    timeout: 200,
                                    maxNums: 1
                                })
                                setTimeout(() => { window.location.href = res.Data }, 200)
                            }
                            else {
                                Qmsg.error({
                                    content: res.Message,
                                    timeout: 2000,
                                    maxNums:1
                                })
                            }
                        }
                    })
                }
            }
            return false;
        }

        clickButton = function () {
            if (event.keyCode == 13) {
                if ($('#userName').val() == "")
                    $('#userName').focus();
                else if ($('#password').val() == "")
                    $('#password').focus();
                else
                    $('#submit_login').click()
                return false;
            }
        }

        $.fn.serializeObject = function () {
            var o = {};
            var a = this.serializeArray();
            $.each(a, function () {
                if (o[this.name] !== undefined) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        }
         $(document).on('opened', '.remodal:not(.modalP)', function () {
            let account = $('#userName').val()
            $('#ForgetUser').val(account)

            if (account != null && account != '') {
                let _data = {
                    account: account
                }
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("GetEmail", "Home")',
                    data: _data,
                    success: function (res) {
                        if (res.Code == 200) {
                            let _d = res.Data
                            if (_d != null && _d.length > 0) {
                                $('#UserId').val(_d[0]['UserId'])
                                $('#ForgetEmail').val(_d[0]['FieldValue'])
                            }
                        }
                    }
                })
            }
        })

        $(document).on('confirmation', '.remodal:not(.modalP)', function () {
            if ($('#ForgetUser').val() != '' && $('#ForgetEmail').val()!='') {
                let _data = {
                    info: {
                        UserId: $('#UserId').val(),
                        SendTo: $('#ForgetEmail').val(),
                        CreateUserId: $('#UserId').val()
                    }
                }
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("SendEmail", "Home")',
                    data: _data,
                    success: function (res) {
                        if (res.Code == 200) {
                            $('[data-remodal-id=modal]').remodal().close()
                            Qmsg.success({
                                content: '@Htmllocalizer["Success_SendEmail"]',
                                timeout: 200,
                                maxNums: 1
                            })
                        }
                        else {
                            Qmsg.error({
                                content: res.Message,
                                timeout: 2000,
                                maxNums: 1
                            })
                        }
                    }
                })
            }
        })
         $(document).on('confirmation', '.remodal.modalP', function () {
            let success = true
            if ($('.NewPassword').val() == '') {
                success = false
                setValueState($('.NewPassword'), true,'@Htmllocalizer["Error_CannotEmpty"]')
            }
            else {
                setValueState($('.NewPassword'), false)
            }
            if ($('.ConfirmPassword').val() == '') {
                success = false
                setValueState($('.ConfirmPassword'), true,'@Htmllocalizer["Error_CannotEmpty"]')
            }
            else if ($('.NewPassword').val() != $('.ConfirmPassword').val()) {
                success = false
                setValueState($('.ConfirmPassword'), true,'@Htmllocalizer["Error_CannotEqual"]')
            }
            else {
                setValueState($('.ConfirmPassword'), false)
            }
            if (success) {
                let _data = {
                    info: {
                        UserId: 0,
                        Account: $('.Account').val(),
                        OldPasswd: $('.OldPassword').val(),
                        NewPasswd: $('.NewPassword').val()
                    }
                }
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("ChangePassword", "Home")',
                    data: _data,
                    success: function (res) {
                        if (res.Code == 200) {
                            $.ajax({
                                method: 'POST',
                                url: '@Url.Action("Login","Home")',
                                data: {
                                    userName: $('.Account').val(),
                                    password: $('.NewPassword').val()
                                },
                                success: function (res) {
                                    if (res.Code == 200) {
                                        window.location.href = res.Data
                                    }
                                    else {
                                        Qmsg.error({
                                            content: res.Message,
                                            timeout: 2000,
                                            maxNums:1
                                        })
                                    }
                                }
                            })
                        }
                        else {
                            Qmsg.error({
                                content: res.Message,
                                timeout: 2000,
                                maxNums: 1
                            })
                        }
                    }
                })
            }
        })

        $(document).on('cancellation', '.remodal.modalP', function () {
            $('.NewPassword').val('')
            setValueState($('.NewPassword'), false)
            $('.ConfirmPassword').val('')
            setValueState($('.ConfirmPassword'), false)
        })

       //获取token
        function getToken() {
            let _token = JSON.parse(localStorage.getItem('token'))
            if (_token == null || _token.expires_in < getServerDate().getTime()) {
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("GetToken","Home")',
                    async: false,
                    success: function (res) {
                        if (res.Code == 200) {
                            if (res.Data != null) {
                                localStorage.setItem('token', JSON.stringify(res.Data))
                                _token = res.Data
                            }
                        }
                        else {
                            localStorage.removeItem('token')
                            _token = null
                            Qmsg.error({
                                content: res.Message,
                                timeout: 2000,
                                maxNums: 1
                            })
                        }
                    }
                });
            }
            return _token
        }

        //写Cookie
        function addCookie(objName, objValue, objHours, objPath) {
            var str = objName + "=" + objValue; //编码
            if (objHours > 0) {//为0时不设定过期时间，浏览器关闭时cookie自动消失
                var date = new Date();
                var ms = objHours * 3600 * 1000;
                date.setTime(date.getTime() + ms);
                str += "; expires=" + date.toGMTString();
            }
            if (objPath != null)
                str += ";Path=" + objPath
            document.cookie = str;
        }

        //读Cookie
        function getCookie(objName) {//获取指定名称的cookie的值
            var arrStr = document.cookie.split("; ");
            for (var i = 0; i < arrStr.length; i++) {
                var temp = arrStr[i].split("=");
                if (temp[0] == objName) return unescape(arrStr[i].slice(objName.length+1));  //解码
            }
            return "";
        }

        function getServerDate() {
            return new Date($.ajax({ async: false }).getResponseHeader("Date"));
        }

        //设置input状态
        function setValueState(oI, isError, oValueStateText) {
            if (isError) {
                oI.addClass('error')
                oI.next('div[class=tip]').remove()
                oI.after('<div class="tip"><span>' + oValueStateText + '</span></div>')
                oI.next().hide()
                oI.focus(function () { $(this).next().show() })
                oI.focusout(function () { $(this).next().hide() })
            }
            else {
                oI.removeClass('error')
                oI.next('div[class=tip]').remove()
                oI.unbind('focus')
                oI.unbind('focusout')
            }
        }
    </script>
</body>
</html>
