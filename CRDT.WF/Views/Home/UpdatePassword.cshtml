@{
    ViewData["Title"] = "修改密码";
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<CRDT.WF.Controllers.HomeController> Htmllocalizer

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>更新密码</title>
    <link rel="stylesheet" href="/css/UpdatePassword/UpdatePassword.css" />
</head>

<body>
    <div class="body">
        <div class="content">
            <div class="logo">
                <img src="/img/UpdatePassword/logo.png" alt="" />
            </div>
            <div class="card">
                <div class="title">
                    <p>更新密码</p>
                </div>

                <div id="form" class="form">
                    <input class="Account" type="text" placeholder="登录账号" autocomplete="off" readonly />
                    <div style="position:relative">
                        <input class="NewPassword" type="password" placeholder="新密码" autocomplete="new-password" />
                    </div>
                    <div style="position:relative">
                        <input class="ConfirmPassword" type="password" placeholder="确认新密码" autocomplete="new-password" />
                    </div>
                    <div class="buttons">
                        <button id="submitButton" class="DefaultButton" onclick="submit()">提交</button>
                        @*<button class="DefaultButton" onclick="cancel()">取消</button>*@
                    </div>
                </div>
            </div>
            <div class="foot">
                <p>Support Hotline 12580</p>
            </div>
        </div>
    </div>

    <script src="https://www.jq22.com/jquery/jquery-1.10.2.js"></script>

    <script>
        var obj;
        (function () {
            obj = htmlDecode('@ViewBag.Data')
            if (obj != null && obj != '') {
                obj = JSON.parse(obj)
                $('.Account').val(obj['Account'])
            }
        })();

        submit = function () {
            $('#submitButton').attr('disabled', 'disabled')
            $('#submitButton').addClass('disabledButton')
            let success = true
            if ($('.NewPassword').val() == '') {
                success = false
                setValueState($('.NewPassword'), true,'@Htmllocalizer["Error_CannotEmpty"]')
            }
            else {
                setValueState($('.NewPassword'), false)
            }
            if ($('.ConfirmPassword').val() == '') {
                success = false
                setValueState($('.ConfirmPassword'), true,'@Htmllocalizer["Error_CannotEmpty"]')
            }
            else if ($('.NewPassword').val() != $('.ConfirmPassword').val()) {
                success = false
                setValueState($('.ConfirmPassword'), true,'@Htmllocalizer["Error_CannotEqual"]')
            }
            else {
                setValueState($('.ConfirmPassword'), false)
            }
            if (success) {
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("ResetPassword", "Home")',
                    data: {
                        info: {
                            UserId: obj['UserId'],
                            Account: obj['Account'],
                            NewPasswd: $('.NewPassword').val(),
                            NewId: obj['NewId']
                        }
                    },
                    success: function (res) {
                        if (res.Code == 200) {
                            $.ajax({
                                method: 'POST',
                                url: '@Url.Action("Login","Home")',
                                data: {
                                    userName: obj['Account'],
                                    password: $('.NewPassword').val()
                                },
                                success: function (res) {
                                    //loadingMsg.close();
                                    if (res.Code == 200) {
                                        window.location.href = res.Data
                                    }
                                    else {
                                        Qmsg.error({
                                            content: res.Message,
                                            timeout: 2000,
                                            maxNums: 1
                                        })
                                    }
                                }
                            })
                        }
                        else {
                            $('#submitButton').removeAttr('disabled')
                            $('#submitButton').removeClass('disabledButton')
                            Qmsg.error({
                                content: res.Message,
                                timeout: 2000,
                                maxNums: 1
                            })
                        }
                    }
                })
            }
            else {
                $('#submitButton').removeAttr('disabled')
                $('#submitButton').removeClass('disabledButton')
            }
        }

        cancel = function () {
            console.log('取消')
        }

        //html解码
        function htmlDecode(text) {
            var temp = document.createElement("div");
            temp.innerHTML = text;
            var output = temp.innerText || temp.textContent;
            temp = null;
            return output;
        }

        //获取服务器时间
        function getServerDate() {
            return new Date($.ajax({ async: false }).getResponseHeader("Date"));
        }

        //获取token
        function getToken() {
            let _token = JSON.parse(localStorage.getItem('token'))
            if (_token == null || _token.expires_in < getServerDate().getTime()) {
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("GetToken","Home")',
                    async: false,
                    success: function (res) {
                        if (res.Code == 200) {
                            if (res.Data != null) {
                                localStorage.setItem('token', JSON.stringify(res.Data))
                                _token = res.Data
                            }
                        }
                        else {
                            localStorage.removeItem('token')
                            _token = null
                            Qmsg.error({
                                content: res.Message,
                                timeout: 2000,
                                maxNums: 1
                            })
                        }
                    }
                });
            }
            return _token
        }

        //设置input状态
        function setValueState(oI, isError, oValueStateText) {
            if (isError) {
                oI.addClass('error')
                oI.next('div[class=tip]').remove()
                oI.after('<div class="tip"><span>' + oValueStateText + '</span></div>')
                oI.next().hide()
                oI.focus(function () { $(this).next().show() })
                oI.focusout(function () { $(this).next().hide() })
            }
            else {
                oI.removeClass('error')
                oI.next('div[class=tip]').remove()
                oI.unbind('focus')
                oI.unbind('focusout')
            }
        }
    </script>
</body>

</html>
